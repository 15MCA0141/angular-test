{"version":3,"sources":["./src/app/common/app-error.ts","./src/app/favourite/favourite.component.css","./src/app/github-profile/github-profile.component.ts","./src/app/change-password/change-password.component.ts","./src/app/zippy/zippy.component.html","./src/app/github-followers/github-followers.component.ts","./src/app/new-course-form/new-course-form.component.css","./src/app/panel/panel.component.ts","./src/app/zippy/zippy.component.ts","./src/app/common/not-found-error.ts","./src/app/signup-form/signup-form.component.html","./src/app/panel/panel.component.css","./src/app/github-followers/github-followers.component.html","./src/app/home/home.component.ts","./src/app/app.component.css","./src/app/contact-form/contact-form.component.ts","./src/environments/environment.prod.ts","./src/app/change-password/change-password.component.css","./src/app/navbar/navbar.component.html","./src/app/no-access/no-access.component.css","./src/app/panel/panel.component.html","./src/app/new-course-form/new-course-form.component.ts","./src/app/services/data.service.ts","./src/app/home/home.component.html","./src/app/course/course.component.html","./src/app/common/bad-input-error.ts","./src/app/change-password/change-password.component.html","./src/app/no-access/no-access.component.html","./src/app/posts/posts.component.ts","./src/app/zippy/zippy.component.css","./src/app/posts/posts.component.css","./src/app/services/auth-guard.service.ts","./src/app/helpers/fake-backend.ts","./src/app/services/http.service.ts","./src/app/github-profile/github-profile.component.css","./src/app/no-access/no-access.component.ts","./src/app/contact-form/contact-form.component.css","./src/app/posts/posts.component.html","./src/app/favourite/favourite.component.ts","./src/app/admin/admin.component.html","./src/app/app.component.ts","./src/app/common/app-error-handler.ts","./src/app/admin/admin.component.ts","./src/app/app.component.html","./src/app/not-found/not-found.component.css","./src/app/signup-form/signup-form.component.ts","./src/app/contact-form/contact-form.component.html","./src/app/Courses/courses.component.ts","./src/app/app.module.ts","./src/app/course/course.component.css","./src/app/github-followers/github-followers.component.css","./src/app/helpers/jwt.interceptor.ts","./src/app/services/authentication.service.ts","./src/app/helpers/error.interceptor.ts","./src/app/login/login.component.html","./src/app/course/course.component.ts","./src/app/services/order.service.ts","./src/app/navbar/navbar.component.ts","./src/app/not-found/not-found.component.ts","./src/app/new-course-form/new-course-form.component.html","./src/app/favourite/favourite.component.html","./src/app/change-password/password.validators.ts","./src/app/services/user.service.ts","./src/app/not-found/not-found.component.html","./src/app/Courses/courses.service.ts","./src/app/services/github-followers.service.ts","./src/app/signup-form/signup-form.component.css","./src/app/login/login.component.ts","./src/app/signup-form/username.validators.ts","./src/app/navbar/navbar.component.css","./src/app/github-profile/github-profile.component.html","./src/app/admin/admin.component.css","./src/app/input-format.directive.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.055fae54f798c1a256fd.js","sourcesContent":["export class AppError {\r\n    constructor(public originalError?: any){\r\n\r\n    }\r\n}","export default \".glyphicon{\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n.glyphicon-star{\\r\\n    background-color: rgb(223, 247, 177);\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZhdm91cml0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtBQUNkOztBQUVBO0lBQ0ksb0NBQW9DO0FBQ3hDIiwiZmlsZSI6ImZhdm91cml0ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmdseXBoaWNvbntcclxuICAgIGNvbG9yOiByZWQ7XHJcbn1cclxuXHJcbi5nbHlwaGljb24tc3RhcntcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMjMsIDI0NywgMTc3KTtcclxufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'github-profile',\n  templateUrl: './github-profile.component.html',\n  styleUrls: ['./github-profile.component.css']\n})\nexport class GithubProfileComponent {\n\n  constructor(private router: Router) { }\n\n  submit() {\n    this.router.navigate(['/followers'], {\n      queryParams: { page: 1, order: 'newest' }\n    });\n  }\n}\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { PasswordValidators } from './password.validators';\n\n@Component({\n  selector: 'change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent {\n  form: FormGroup;\n\n  constructor(fb: FormBuilder){\n    this.form = fb.group({\n      oldPassword: ['',\n        Validators.required,\n        PasswordValidators.invalidOldPassword\n      ],\n      newPassword: ['',Validators.required],\n      cnfPassword: ['',Validators.required],\n    },{\n      validator: PasswordValidators.passwordShouldMatch\n    });\n  }\n\n  get oldPassword(){\n    return this.form.get('oldPassword')\n  }\n  get newPassword(){\n    return this.form.get('newPassword')\n  }\n  get cnfPassword(){\n    return this.form.get('cnfPassword')\n  }\n}\n","export default \"<div class=\\\"zippy\\\">\\n    <div\\n        class=\\\"zippy-heading\\\"\\n        [class.expanded]=\\\"isExpanded\\\"\\n        (click)=\\\"toggle()\\\"\\n        >\\n        {{ title }}\\n        <span class=\\\"glyphicon\\\"\\n            [ngClass]=\\\"{\\n                'glyphicon-chevron-up': isExpanded,\\n                'glyphicon-chevron-down': !isExpanded\\n            }\\\"\\n        >\\n\\n        </span>\\n    </div>\\n    <div *ngIf=\\\"isExpanded\\\" class=\\\"zippy-body\\\">\\n        <ng-content></ng-content>\\n    </div>\\n</div>\";","import { map, switchMap } from 'rxjs/operators';\nimport { GithubFollowersService } from './../services/github-followers.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable, combineLatest } from 'rxjs';\n\n@Component({\n  selector: 'github-followers',\n  templateUrl: './github-followers.component.html',\n  styleUrls: ['./github-followers.component.css']\n})\n\nexport class GithubFollowersComponent implements OnInit {\n  followers: any;\n\n  constructor(\n    private route: ActivatedRoute,\n    private service: GithubFollowersService) { }\n\n  ngOnInit(): void {\n    combineLatest([\n      this.route.paramMap,\n      this.route.queryParamMap\n    ])\n    .pipe(switchMap(combined => {\n      let id = combined[0].get('id');\n      let page = combined[1].get('page');\n    \n      return this.service.getAll()\n    }))\n    .subscribe(followers => this.followers = followers);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJuZXctY291cnNlLWZvcm0uY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-panel',\n  templateUrl: './panel.component.html',\n  styleUrls: ['./panel.component.css']\n})\nexport class PanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'zippy',\n  templateUrl: './zippy.component.html',\n  styleUrls: ['./zippy.component.css']\n})\nexport class ZippyComponent {\n  @Input('title') title: string | undefined;\n  isExpanded: boolean = false;\n\n  toggle(){\n    this.isExpanded=!this.isExpanded;\n  }\n\n\n}\n","import { AppError } from \"./app-error\";\r\n\r\nexport class NotFoundError extends AppError {\r\n    notFoundError(error: Response) {\r\n        alert('Not Found !');\r\n        console.log(error);\r\n    }\r\n}","export default \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"login()\\\">\\n    <div *ngIf=\\\"form.errors\\\" class=\\\"alert alert-danger\\\">\\n        Invalid Username or Password !\\n    </div>\\n    <div formGroupName=\\\"account\\\">\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"username\\\">Username</label>\\n            <input \\n                formControlName=\\\"username\\\"\\n                id=\\\"username\\\" \\n                type=\\\"text\\\" \\n                class=\\\"form-control\\\">\\n            <div *ngIf=\\\"username.pending\\\">Checking the username...\\n                <div class=\\\"progress\\\">\\n                    <div class=\\\"progress-bar progress-bar-striped active\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"50\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" style=\\\"width: 45%\\\">\\n                    <span class=\\\"sr-only\\\">50% Complete</span>\\n                    </div>\\n                </div>\\n                </div>\\n            <div *ngIf=\\\"username.touched && username.invalid\\\" class=\\\"alert alert-danger\\\">\\n                <div *ngIf=\\\"username.errors.required\\\">Username is required !</div>\\n                <div *ngIf=\\\"username.errors.minlength\\\">Username should be minimum {{ username.errors.minlength.requiredLength }} characters !</div>\\n                <div *ngIf=\\\"username.errors.cannotContainSpace\\\">Username cannot contain spaces !</div>\\n                <div *ngIf=\\\"username.errors.shouldBeUnique\\\">Username already registered !</div>\\n            </div>    \\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"password\\\">Password</label>\\n            <input \\n                formControlName=\\\"password\\\"\\n                id=\\\"password\\\" \\n                type=\\\"text\\\" \\n                class=\\\"form-control\\\">\\n            <div\\n                *ngIf=\\\"password.touched && password.invalid\\\" \\n                class=\\\"alert alert-danger\\\">\\n                Password is required\\n            </div> \\n        </div>\\n\\n    </div>\\n\\n    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\">\\n        Sign Up\\n    </button>\\n</form>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYW5lbC5jb21wb25lbnQuY3NzIn0= */\";","export default \"<div *ngFor=\\\"let follower of followers\\\" class=\\\"media\\\">\\n    <div class=\\\"media-left\\\">\\n        <a href=\\\"#\\\">\\n            <img class=\\\"avatar media-object\\\" src=\\\"{{ follower.avatar_url }}\\\">\\n        </a>\\n    </div>\\n    <div class=\\\"media-body\\\">\\n        <h4 class=\\\"media-heading\\\">\\n            <a [routerLink]=\\\"['/followers', follower.id, follower.login]\\\">{{ follower.login }}</a>\\n        </h4>\\n        <a href=\\\"follower.html_url\\\">{{ follower.html_url }}</a>\\n    </div>\\n</div>\";","import { Component } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { User } from '../models/user';\nimport { AuthenticationService } from './../services/authentication.service';\nimport { UserService } from './../services/user.service';\n\n@Component({ templateUrl: 'home.component.html' })\nexport class HomeComponent {\n    loading = false;\n    users: []|any;\n\n    constructor(private userService: UserService) { }\n\n    ngOnInit() {\n        this.loading = true;\n        this.userService.getAll().pipe(first()).subscribe(users => {\n            this.loading = false;\n            this.users = users;\n        });\n    }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\";","/* Implementation of Template-driven Forms */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'contact-form',\n  templateUrl: './contact-form.component.html',\n  styleUrls: ['./contact-form.component.css']\n})\nexport class ContactFormComponent {\n  contactMethods = [\n    {id: 1, name: \"Email\"},\n    {id: 2, name: \"Phone\"}\n  ];\n\n  gender = [\n    {id:1, name: \"Male\"},\n    {id:2, name: \"Female\"}\n  ];\n\n  log(x:any){\n    console.log(x);\n  }\n\n  submit(f:any){\n    console.log(f);\n  }\n\n\n}\n","export const environment = {\n  production: true,\n  apiUrl: 'http://localhost:4200'\n};\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjaGFuZ2UtcGFzc3dvcmQuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<nav class=\\\"navbar navbar-default\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"collapse navbar-collapse\\\">\\n        <ul class=\\\"nav navbar-nav\\\">\\n          <li routerLinkAcive=\\\"active current\\\">\\n            <a routerLink=\\\"/followers\\\" \\n               [queryParams]=\\\"{ page: 1, order: 'newest' }\\\">Followers</a>\\n          </li>\\n          <li routerLinkAcive=\\\"active current\\\"><a routerLink=\\\"/posts\\\">Posts</a></li>\\n        </ul>\\n      </div>\\n    </div>\\n  </nav>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJuby1hY2Nlc3MuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-heading\\\">\\n        <ng-content select=\\\".heading\\\"></ng-content>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n        <ng-content select=\\\".body\\\"></ng-content>\\n    </div>\\n</div>\";","import { FormGroup, FormControl, FormArray, FormBuilder, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'new-course-form',\n  templateUrl: './new-course-form.component.html',\n  styleUrls: ['./new-course-form.component.css']\n})\nexport class NewCourseFormComponent {\n  form;\n\n  constructor(fb: FormBuilder){\n    this.form = fb.group({\n      name: ['',Validators.required],\n      contact: fb.group({\n        email: [],\n        phone: []\n      }),\n      topics: fb.array([])\n    });\n  }\n\n  addTopic(topic: HTMLInputElement) {\n    this.topics.push(new FormControl(topic.value));  \n    topic.value='';\n  }\n  removeTopic(topic: FormControl){\n    let index = this.topics.controls.indexOf(topic);\n    this.topics.removeAt(index);\n  }\n\n  get topics() {\n    return this.form.get('topics') as FormArray;\n  }\n}\n","import { AppErrorHandler } from './../common/app-error-handler';\r\nimport { AppError } from './../common/app-error';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry, map } from 'rxjs/operators';\r\nimport { NotFoundError } from '../common/not-found-error';\r\nimport { BadInputError } from '../common/bad-input-error';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n  \r\n  constructor(private url: string, private http: HttpClient) { }\r\n    \r\n    getAll() {\r\n       return this.http.get(this.url)\r\n    // //    .map(response => response)\r\n    //    .pipe(\r\n    //        retry(1),\r\n    //        catchError(this.handleError));\r\n    \r\n   }\r\n\r\n   create(resource: HTMLInputElement) {\r\n        return this.http\r\n        .post(this.url, JSON.stringify(resource))\r\n        .pipe(catchError(this.handleError));\r\n   }\r\n\r\n   update(resource: any){\r\n        return this.http\r\n        .patch(this.url + '/' + resource.id, JSON.stringify({ isRead: true }))\r\n        .pipe(catchError(this.handleError));\r\n   }\r\n\r\n    delete(id: number): Observable<any> {\r\n        return this.http\r\n        .delete(this.url + '/' + id)\r\n        .pipe(catchError(this.handleError));\r\n    }\r\n\r\n   private handleError(error: Response) {   \r\n        if (error.status === 400) return throwError(new BadInputError());\r\n        if (error.status === 404) return throwError(new NotFoundError());\r\n        return throwError(new AppError(error.json()));\r\n    }\r\n}","export default \"<div class=\\\"card mt-4\\\">\\n    <h4 class=\\\"card-header\\\">You're logged in with Angular 8 & JWT!!</h4>\\n    <div class=\\\"card-body\\\">\\n        <h6>Users from secure api end point</h6>\\n        <div *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm\\\"></div>\\n        <ul *ngIf=\\\"users\\\">\\n            <li *ngFor=\\\"let user of users\\\">{{user.firstName}} {{user.lastName}}</li>\\n        </ul>\\n    </div>\\n</div>\";","export default \"<p>course works!</p>\\n\";","import { AppError } from \"./app-error\";\r\n\r\nexport class BadInputError extends AppError {\r\n    badInputError(error: any) {\r\n        alert('Wrong Input !');\r\n        console.log(error);\r\n    }\r\n}","export default \"<form [formGroup]=\\\"form\\\">\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"\\\">Old Password</label>\\n        <input formControlName=\\\"oldPassword\\\" type=\\\"password\\\" class=\\\"form-control\\\">\\n        <div \\n            *ngIf=\\\"oldPassword.touched && oldPassword.invalid\\\"\\n            class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"oldPassword.errors.required\\\">Old password is required !</div>\\n            <div *ngIf=\\\"oldPassword.errors.invalidOldPassword\\\">Invalid old password !</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"\\\">New Password</label>\\n        <input formControlName=\\\"newPassword\\\" type=\\\"password\\\" class=\\\"form-control\\\">\\n        <div \\n            *ngIf=\\\"newPassword.touched && newPassword.invalid\\\"\\n            class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"newPassword.errors.required\\\">New password is required !</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"\\\">Confirm Password</label>\\n        <input formControlName=\\\"cnfPassword\\\" type=\\\"password\\\" class=\\\"form-control\\\">\\n        <div \\n            *ngIf=\\\"cnfPassword.touched && cnfPassword.invalid\\\"\\n            class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"cnfPassword.errors.required\\\">Confirm password is required !</div>\\n        </div>\\n        <div *ngIf=\\\"cnfPassword.valid && form.invalid && form.errors.passwordShouldMatch\\\" class=\\\"alert alert-danger\\\">\\n            Passwords do not match !\\n        </div>\\n    </div>\\n    <button class=\\\"btn btn-primary\\\">Change Password</button>\\n</form>\";","export default \"\\n<h1>Access Denied</h1>\";","import { BadInputError } from './../common/bad-input-error';\nimport { AppErrorHandler } from './../common/app-error-handler';\nimport { NotFoundError } from './../common/not-found-error';\nimport { HttpService } from './../services/http.service';\nimport { Component, OnInit } from '@angular/core';\nimport { AppError } from '../common/app-error';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.css']\n})\nexport class PostsComponent implements OnInit {\n  posts:any;\n  count: number = 0;\n  \n\n  constructor(private service: HttpService) { \n  }\n\n  ngOnInit() {\n    this.service.getAll()\n    .subscribe(posts => this.posts = posts);\n  }\n\n  createPost(input: HTMLInputElement){\n    let post: any = {title: input.value};\n    this.posts.splice(0, 0, post);\n\n    input.value='';\n\n    this.service.create(post)\n      .subscribe(\n        newPost => {\n          post['id'] = newPost;\n        }, \n        (error: AppError) => {\n          this.posts.splice(0, 1);\n          \n          if (error instanceof BadInputError) {\n            //this.form.setErrors(error)\n          }\n          else throw error;\n      });\n  }\n\n  updatePost(post: any) {\n    this.service.update(post)\n      .subscribe(\n        updatedPost => {\n          console.log(updatedPost);\n      });\n  }\n\n  deletePost(post: any) {\n      let index = this.posts.indexOf(post);\n      this.posts.splice(index, 1);\n      console.log(++this.count + ' post deleted !')\n      \n      this.service.delete(post.id)\n      .subscribe(\n        null,\n        (error: AppError) => {\n          this.posts.splice(index, 0, post);\n          \n          if(error instanceof NotFoundError)\n            alert('This post has already been deleted !')\n          else throw error;\n      });\n  }\n}","export default \".zippy {\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 2px;\\r\\n}\\r\\n.zippy-heading {\\r\\n    font-weight: bold;\\r\\n    padding: 20px;\\r\\n    cursor: pointer;\\r\\n}\\r\\n.zippy-body {\\r\\n    padding: 20px;\\r\\n}\\r\\n.expanded {\\r\\n    background: #f0f0f0;\\r\\n}\\r\\n.glyphicon {\\r\\n    float: right;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInppcHB5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxzQkFBc0I7SUFDdEIsa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxpQkFBaUI7SUFDakIsYUFBYTtJQUNiLGVBQWU7QUFDbkI7QUFFQTtJQUNJLGFBQWE7QUFDakI7QUFFQTtJQUNJLG1CQUFtQjtBQUN2QjtBQUVBO0lBQ0ksWUFBWTtBQUNoQiIsImZpbGUiOiJ6aXBweS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnppcHB5IHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBib3JkZXItcmFkaXVzOiAycHg7XHJcbn1cclxuLnppcHB5LWhlYWRpbmcge1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4uemlwcHktYm9keSB7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG59XHJcblxyXG4uZXhwYW5kZWQge1xyXG4gICAgYmFja2dyb3VuZDogI2YwZjBmMDtcclxufVxyXG5cclxuLmdseXBoaWNvbiB7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbn0iXX0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwb3N0cy5jb21wb25lbnQuY3NzIn0= */\";","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const currentUser = this.authenticationService.currentUserValue;\n        if (currentUser) {\n            // logged in so return true\n            return true;\n            console.log(currentUser);\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n        return false;\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\n\nimport { User } from '../models/user';\n\nconst users: User[]|any = [{ id: 1, username: 'test', password: 'test', firstName: 'Test', lastName: 'User' }];\n\n@Injectable()\nexport class FakeBackendInterceptor implements HttpInterceptor {\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const { url, method, headers, body } = request;\n\n        // wrap in delayed observable to simulate server api call\n        return of(null)\n            .pipe(mergeMap(handleRoute))\n            .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\n            .pipe(delay(500))\n            .pipe(dematerialize());\n\n        function handleRoute() {\n            switch (true) {\n                case url.endsWith('/users/authenticate') && method === 'POST':\n                    return authenticate();\n                case url.endsWith('/users') && method === 'GET':\n                    return getUsers();\n                default:\n                    // pass through any requests not handled above\n                    return next.handle(request);\n            }    \n        }\n\n        // route functions\n\n        function authenticate() {\n            const { username, password } = body;\n            const user = users.find((x: { username: any; password: any; }) => x.username === username && x.password === password);\n            if (!user) return error('Username or password is incorrect');\n            return ok({\n                id: user.id,\n                username: user.username,\n                firstName: user.firstName,\n                lastName: user.lastName,\n                token: 'fake-jwt-token'\n            })\n        }\n\n        function getUsers() {\n            if (!isLoggedIn()) return unauthorized();\n            return ok(users);\n        }\n\n        // helper functions\n\n        function ok(body?: { id: any; username: any; firstName: any; lastName: any; token: string; }) {\n            return of(new HttpResponse({ status: 200, body }))\n        }\n\n        function error(message: string) {\n            return throwError({ error: { message } });\n        }\n\n        function unauthorized() {\n            return throwError({ status: 401, error: { message: 'Unauthorised' } });\n        }\n\n        function isLoggedIn() {\n            return headers.get('Authorization') === 'Bearer fake-jwt-token';\n        }\n    }\n}\n\nexport let fakeBackendProvider = {\n    // use fake backend in place of Http service for backend-less development\n    provide: HTTP_INTERCEPTORS,\n    useClass: FakeBackendInterceptor,\n    multi: true\n};","import { DataService } from './data.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService extends DataService {\n    \n  constructor(http: HttpClient) {\n    super('https://jsonplaceholder.typicode.com/posts', http);\n   }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJnaXRodWItcHJvZmlsZS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-no-access',\n  templateUrl: './no-access.component.html',\n  styleUrls: ['./no-access.component.css']\n})\nexport class NoAccessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".form-control.ng-touched.ng-invalid {\\r\\n    border: 2px solid red;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRhY3QtZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kscUJBQXFCO0FBQ3pCIiwiZmlsZSI6ImNvbnRhY3QtZm9ybS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tY29udHJvbC5uZy10b3VjaGVkLm5nLWludmFsaWQge1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgcmVkO1xyXG59Il19 */\";","export default \"<input \\n    (keyup.enter)=\\\"createPost(title)\\\" #title\\n    type=\\\"text\\\" class=\\\"form-control\\\">\\n<ul class=\\\"list-group\\\">\\n    <li \\n    *ngFor=\\\"let post of posts\\\"\\n    class=\\\"list-group-item\\\">\\n    <button\\n        (click)=\\\"updatePost(post)\\\"\\n        class=\\\"btn btn-default btn-sm\\\">Update</button>\\n    <button\\n        (click)=\\\"deletePost(post)\\\"\\n        class=\\\"btn btn-default btn-sm\\\">Delete</button>\\n        {{ post.title }}\\n    </li>\\n</ul>\";","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'favourite',\n  templateUrl: './favourite.component.html',\n  styleUrls: ['./favourite.component.css']\n})\nexport class FavouriteComponent implements OnInit {\n  @Input() isFavorite: boolean;\n  @Output () change = new EventEmitter(); \n\n  constructor() {\n    this.isFavorite =true;\n   }\n\n  ngOnInit(): void {\n  }\n\n  onClick(){\n    this.isFavorite = !(this.isFavorite);\n    this.change.emit({ newValue: this.isFavorite\n    });\n  }\n}\n\nexport interface FavoriteChangedEventArgs {\n  newValue: boolean\n}\n","export default \"\\n<h1>Admin</h1>\\n<h2>Orders</h2>\\n<ul>\\n  <li *ngFor=\\\"let order of orders\\\">{{ order }}</li>\\n</ul>\";","import { User } from './models/user';\nimport { FavoriteChangedEventArgs } from './favourite/favourite.component';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from './services/authentication.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  currentUser: User|any;\n  courses:any;\n  title = 'hello-world';\n  viewMode='somethingElse';\n  post={\n    isFavorite: true\n  }\n  canSave = false;\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n    )\n  {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n  }\n\n  logout() {\n    this.authenticationService.logout();\n    this.router.navigate(['/login']);\n    }\n\n\n  onLoad(){\n    this.courses=[\n      {id:1, name:'Programing'},\n      {id:2, name:'Database'},\n      {id:3, name:'Operating System'}\n    ];\n  }\n\n  trackCourse(index:number, course:any){\n    return course ? course.id : undefined;\n  }\n\n  onAdd(){\n    let i = this.courses.length;\n    this.courses.push({ id: i+1, name: \"Networking\"});\n    console.log('New course added!');\n  }\n\n  onRemove(course:any){\n    let index = this.courses.indexOf(course);\n    this.courses.splice(index,1);\n\n  }\n  \n  onFavoriteChanged(eventArgs: FavoriteChangedEventArgs) {\n    console.log(\"Favorite Changed : \", eventArgs)\n  }\n\n}\n","import { ErrorHandler } from \"@angular/core\";\r\n\r\nexport class AppErrorHandler implements ErrorHandler {\r\n    handleError(error: Response) {\r\n        alert('An unexpected error occured !');\r\n        console.log(error);\r\n    }\r\n}","import { OrderService } from './../services/order.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n  orders: any;\n\n  constructor(private orderService: OrderService) { }\n\n  ngOnInit() {\n    this.orderService.getOrders()\n      .subscribe(orders => this.orders = orders);\n  }\n}\n","export default \"<h1>Angular</h1>\\n<ul class=\\\"nav nav-pills\\\">\\n    <li [class.active]=\\\"viewMode == 'map'\\\"><a (click)=\\\"viewMode='map'\\\">Map View</a></li>\\n    <li [class.active]=\\\"viewMode == 'list'\\\"><a (click)=\\\"viewMode='list'\\\">List View</a></li>\\n</ul>\\n<div [ngSwitch]=\\\"viewMode\\\">\\n    <div *ngSwitchCase=\\\"'map'\\\">\\n        <!-- To get responses for HTTP Requests -->\\n        <app-posts></app-posts>\\n    </div>\\n    <div *ngSwitchCase=\\\"'list'\\\">\\n        <github-followers></github-followers>\\n    </div>\\n    <div *ngSwitchDefault>Otherwise</div>\\n</div>\\n<br>\\n<!-- Navigation-bar Component -->\\n<navbar></navbar>\\n\\n<!-- Imported from jasonwatmore.com -->\\n<!-- <nav class=\\\"navbar navbar-expand navbar-dark bg-dark\\\" *ngIf=\\\"currentUser\\\">\\n    <div class=\\\"navbar-nav\\\">\\n        <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/\\\">Home</a>\\n        <a class=\\\"nav-item nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\n    </div>\\n</nav> -->\\n\\n<!-- main app container -->\\n<div class=\\\"container\\\">\\n    <router-outlet></router-outlet>\\n</div>\\n<!-- Upto here -->\\n<br>\\n<signup-form></signup-form>\\n<br>\\n<change-password></change-password>\\n<br>\\n<new-course-form></new-course-form>\\n<br>\\n<zippy title=\\\"Shipping Details\\\">\\n    Shipping Details Content\\n</zippy>\\n<zippy title=\\\"Billing Details\\\">\\n    Billing Details Content\\n</zippy>\\n<br>\\n\\n<contact-form></contact-form>\\n\\n<br>\\n<br>\\n<input type=\\\"text\\\" [appInputFormat]=\\\"'uppercase'\\\">\\n<br>\\n\\n<br>\\n    <button (click) =\\\"onLoad()\\\"\\n    [ngStyle]=\\\"{\\n        'backgroundColor': 'teal',\\n        'color': 'white',\\n        'fontWeight': 'bold'\\n    }\\\"\\n    > Load Courses </button>\\n    <button (click) =\\\"onAdd()\\\"> Add </button>\\n<ul>\\n    <li *ngFor=\\\"let course of courses; trackBy: trackCourse\\\">\\n        {{ course.name }}\\n        <button (click) = \\\"onRemove(course)\\\">X</button>\\n    </li>\\n</ul>\\n<br>\\n<button\\n\\n    [ngStyle]=\\\"{\\n        'backgroundColor': canSave ? 'blue':'gray',\\n        'color': canSave ? 'white':'black',\\n        'fontWeight': canSave ? 'bold':'normal'\\n    }\\\"\\n>\\nSave\\n</button>\\n<br>\\n<favourite [isFavorite]=\\\"post.isFavorite\\\" (change)=\\\"onFavoriteChanged($event)\\\"></favourite>\\n<courses ></courses>\\n<app-panel>\\n    <div class=\\\"heading\\\">Heading</div>\\n    <div class=\\\"body\\\">\\n        <h2>Body</h2>\\n        <p>Content goes from here...</p>\\n    </div>\\n</app-panel>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJub3QtZm91bmQuY29tcG9uZW50LmNzcyJ9 */\";","/* Implementation of Angular Reactive Forms */\n\nimport { UsernameValidators } from './username.validators';\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'signup-form',\n  templateUrl: './signup-form.component.html',\n  styleUrls: ['./signup-form.component.css']\n})\nexport class SignupFormComponent {\n  form = new FormGroup({\n    account: new FormGroup({\n      username: new FormControl('',\n      Validators.required,\n      //Validators.minLength(3),\n      // UsernameValidators.cannotContainSpace,\n      UsernameValidators.shouldBeUnique\n    ),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(3)])\n    })\n  });\n\n  get username() {\n    return this.form.get('account.username');\n  }\n\n  get password() {\n    return this.form.get('account.password');\n  }\n\n  login() {\n    this.form.setErrors({\n      invalidLogin: true\n    });\n  }\n}\n","export default \"<form #f=\\\"ngForm\\\" (ngSubmit)=\\\"submit(f)\\\">\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"firstName\\\">First Name</label>\\n        <input\\n            required minlength=\\\"3\\\"\\n            maxlength=\\\"16\\\" \\n            pattern=\\\"Kushal\\\" \\n            ngModel \\n            name=\\\"firstName\\\" \\n            #firstName=\\\"ngModel\\\" \\n            (change)=\\\"log(firstName)\\\" \\n            id=\\\"firstName\\\" \\n            type=\\\"text\\\" \\n            class=\\\"form-control\\\"/>\\n        <div\\n            class=\\\"alert alert-danger\\\" \\n            *ngIf=\\\"firstName.touched && !firstName.valid\\\"\\n        >\\n            <div \\n                *ngIf=\\\"firstName.errors.required\\\">\\n                First Name is required !\\n            </div>\\n            <div \\n                *ngIf=\\\"firstName.errors.minlength\\\">\\n                First Name should be of minimum {{ firstName.errors.minlength.requiredLength }} char !\\n            </div>\\n            <div \\n                *ngIf=\\\"firstName.errors.pattern\\\">\\n                First Name is having wrong pattern !\\n            </div>\\n        </div>\\n        <label for=\\\"lastName\\\">Last Name</label>\\n        <input\\n            required minlength=\\\"3\\\"\\n            maxlength=\\\"16\\\" \\n            pattern=\\\"Kumar\\\" \\n            ngModel \\n            name=\\\"lastName\\\" \\n            #lastName=\\\"ngModel\\\" \\n            (change)=\\\"log(lastName)\\\" \\n            id=\\\"lastName\\\" \\n            type=\\\"text\\\" \\n            class=\\\"form-control\\\"/>\\n    </div>\\n    <div\\n            class=\\\"alert alert-danger\\\" \\n            *ngIf=\\\"lastName.touched && !lastName.valid\\\"\\n        >\\n            <div \\n                *ngIf=\\\"lastName.errors.required\\\">\\n                Last Name is required !\\n            </div>\\n            <div \\n                *ngIf=\\\"lastName.errors.minlength\\\">\\n                Last Name should be of minimum {{ lastName.errors.minlength.requiredLength }} char !\\n            </div>\\n            <div \\n                *ngIf=\\\"lastName.errors.pattern\\\">\\n                Last Name is having wrong pattern !\\n            </div>\\n        </div>\\n\\n    <div *ngFor=\\\"let selectedGender of gender\\\" class=\\\"radio\\\">\\n        <label>\\n            <input ngModel type=\\\"radio\\\" name=\\\"gender\\\" [value]=\\\"selectedGender.id\\\">\\n            {{ selectedGender.name }}\\n        </label>\\n    </div>    \\n    \\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"comment\\\">Comment</label>\\n        <textarea\\n            ngModel \\n            name=\\\"comment\\\" \\n            id=\\\"comment\\\" \\n            cols=\\\"30\\\" \\n            rows=\\\"10\\\"  \\n            class=\\\"form-control\\\">\\n        </textarea>\\n    </div>  \\n\\n    <div class=\\\"checkbox\\\">\\n        <label>\\n            <input type=\\\"checkbox\\\" ngModel name =\\\"isSubscribed\\\"> Subscribe to receive Emails!\\n        </label>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"contactMethod\\\">\\n            Contact Method\\n        </label>\\n        <select multiple ngModel name=\\\"contactMethod\\\" id=\\\"contactMethod\\\" class=\\\"form-control\\\">\\n            <option value=\\\"\\\"></option>\\n            <option *ngFor=\\\"let method of contactMethods\\\" [ngValue]=\\\"method\\\"> {{ method.name }} </option>\\n        </select>\\n    </div>\\n\\n    <p>\\n        {{ f.value | json }}\\n    </p>\\n\\n    <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!f.valid\\\"> \\n        Submit \\n    </button> \\n</form>\";","import { CoursesService } from './courses.service';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'courses',\r\n    template: `\r\n    <h2>{{ title }}</h2>\r\n    <ul>\r\n        <li *ngFor=\"let course of courses\">\r\n            {{ course }}\r\n        </li>\r\n    </ul>\r\n    <button class=\"btn btn-primary\">SAVE</button>\r\n    <div>\r\n        <ul>\r\n            <li> <input [(ngModel)] =\"email\" (keyup.enter)=\"onKeyUp()\" /></li>\r\n            <li> {{5 | currency:'EUR'}} </li>\r\n            <li> {{ testDate | date:'dd-MM-yyyy' }} </li>\r\n        </ul>\r\n    </div>\r\n    <div>\r\n        <b> Convert to Title Case : </b> \r\n        <input type = \"text\" [(ngModel)] =\"titleCase\" />\r\n        <p>\r\n            {{ titleCase | titlecase }}\r\n        </p>\r\n    </div>\r\n\r\n    `\r\n})\r\nexport class CoursesComponent {\r\n    title = \"List of courses : \";\r\n    courses;    \r\n    imageUrl = \"#\";\r\n    email = \"me@example.com\";\r\n    testDate = new Date();\r\n    titleCase = \"\";\r\n\r\n    onKeyUp(){\r\n        console.log(this.email);    \r\n    }\r\n\r\n    constructor(service: CoursesService) { \r\n        this.courses = service.getCourses();\r\n    } \r\n}","import { AuthGuard } from './services/auth-guard.service';\nimport { NoAccessComponent } from './no-access/no-access.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { fakeBackendProvider } from './helpers/fake-backend';\nimport { OrderService } from './services/order.service';\nimport { GithubFollowersService } from './services/github-followers.service';\nimport { AppErrorHandler } from './common/app-error-handler';\nimport { ErrorHandler } from '@angular/core';\nimport { CoursesService } from './Courses/courses.service';\nimport { CoursesComponent } from './Courses/courses.component';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { CourseComponent } from './course/course.component';\nimport { FavouriteComponent } from './favourite/favourite.component';\nimport { PanelComponent } from './panel/panel.component';\nimport { InputFormatDirective } from './input-format.directive';\nimport { ZippyComponent } from './zippy/zippy.component';\nimport { ContactFormComponent } from './contact-form/contact-form.component';\nimport { SignupFormComponent } from './signup-form/signup-form.component';\nimport { NewCourseFormComponent } from './new-course-form/new-course-form.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { PostsComponent } from './posts/posts.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HttpService } from './services/http.service';\nimport { GithubFollowersComponent } from './github-followers/github-followers.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { HomeComponent } from './home/home.component';\nimport { GithubProfileComponent } from './github-profile/github-profile.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { AuthenticationService } from './services/authentication.service';\nimport { ErrorInterceptor } from './helpers/error.interceptor';\nimport { JwtInterceptor } from './helpers/jwt.interceptor';\nimport { appRoutingModule } from './app.routing.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CoursesComponent,\n    CourseComponent,\n    CoursesComponent,\n    FavouriteComponent,\n    PanelComponent,\n    InputFormatDirective,\n    ZippyComponent,\n    ContactFormComponent,\n    SignupFormComponent,\n    NewCourseFormComponent,\n    ChangePasswordComponent,\n    PostsComponent,\n    GithubFollowersComponent,\n    NavbarComponent,\n    HomeComponent,\n    GithubProfileComponent,\n    NotFoundComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      { \n        path: '', \n        component: HomeComponent \n      },\n      { \n        path: 'followers/:id/:username', \n        component: GithubProfileComponent \n      },\n      { \n        path: 'followers', \n        component: GithubFollowersComponent \n      },\n      { \n        path: 'posts', \n        component: PostsComponent \n      },\n      { \n        path: '**', \n        component: NotFoundComponent \n      },\n      {\n        path: 'admin',\n        component: AdminComponent,\n        canActivate: [AuthGuard]\n      },\n      {\n        path: 'login',\n        component: LoginComponent\n      },\n      {\n        path: 'no-access',\n        component: NoAccessComponent\n      }\n    ])\n  ],\n  providers: [\n    CoursesService,\n    HttpService,\n    GithubFollowersService,\n    AuthenticationService,\n    AuthGuard,\n    OrderService,\n    fakeBackendProvider,\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    { provide: ErrorHandler, useClass: AppErrorHandler } \n  ],\n  \n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb3Vyc2UuY29tcG9uZW50LmNzcyJ9 */\";","export default \".avatar {\\r\\n    width: 60px;\\r\\n    height: 60px;\\r\\n    border-radius: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdpdGh1Yi1mb2xsb3dlcnMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0lBQ1osbUJBQW1CO0FBQ3ZCIiwiZmlsZSI6ImdpdGh1Yi1mb2xsb3dlcnMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hdmF0YXIge1xyXG4gICAgd2lkdGg6IDYwcHg7XHJcbiAgICBoZWlnaHQ6IDYwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xyXG59Il19 */\";","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        let currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser && currentUser.token) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${currentUser.token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","import { environment } from './../../environments/environment';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { User } from '../models/user';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n    private currentUserSubject: BehaviorSubject<User>;\n    public currentUser: Observable<User>;\n\n    constructor(private http: HttpClient) {\n        this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')|| '{}'));\n        this.currentUser = this.currentUserSubject.asObservable();\n    }\n\n    public get currentUserValue(): User {\n        return this.currentUserSubject.value;\n    }\n\n    login(username: string, password: string) {\n        return this.http.post<any>(`${environment.apiUrl}/users/authenticate`, { username, password })\n            .pipe(map(user => {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('currentUser', JSON.stringify(user));\n                this.currentUserSubject.next(user);\n                return user;\n            }));\n    }\n\n    logout() {\n        // remove user from local storage to log user out\n        localStorage.removeItem('currentUser');\n        // this.currentUserSubject.next(null);\n    }\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.authenticationService.logout();\r\n                location.reload(true);\r\n            }\r\n\r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","export default \"<div class=\\\"col-md-6 offset-md-3 mt-5\\\">\\n  <div class=\\\"alert alert-info\\\">\\n      Username: test<br />\\n      Password: test\\n  </div>\\n  <div class=\\\"card\\\">\\n      <h4 class=\\\"card-header\\\">Angular 8 JWT Login Example</h4>\\n      <div class=\\\"card-body\\\">\\n          <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"username\\\">Username</label>\\n                  <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\" />\\n                  <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n                      <div *ngIf=\\\"f.username.errors.required\\\">Username is required</div>\\n                  </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"password\\\">Password</label>\\n                  <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\n                  <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                      <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n                  </div>\\n              </div>\\n              <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">\\n                  <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n                  Login\\n              </button>\\n              <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger mt-3 mb-0\\\">{{error}}</div>\\n          </form>\\n      </div>\\n  </div>\\n</div>\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-course',\n  templateUrl: './course.component.html',\n  styleUrls: ['./course.component.css']\n})\nexport class CourseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class OrderService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  getOrders() { \n    return this.http.get('/api/orders')\n      .pipe(map(response => response));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"<form [formGroup]=\\\"form\\\">\\n    Name: <input formControlName=\\\"name\\\" class=\\\"form-group\\\"/>\\n    <div formGroupName=\\\"contact\\\">\\n        Email: <input formControlName=\\\"email\\\" class=\\\"form-group\\\"/>\\n        Phone: <input formControlName=\\\"phone\\\" class=\\\"form-group\\\"/>\\n    </div>\\n    <input\\n        type=\\\"text\\\" class=\\\"form-control\\\"\\n        (keyup.enter)=\\\"addTopic(topic)\\\" #topic>\\n    <ul class=\\\"list-group\\\">\\n        <li \\n            *ngFor=\\\"let topic of topics.controls\\\"\\n            (click)=\\\"removeTopic(topic)\\\"\\n            class=\\\"list-group-item\\\">\\n            {{ topic.value }}\\n        </li>\\n    </ul>\\n</form>\";","export default \"<span\\n    class=\\\"glyphicon\\\"\\n    [ngClass]=\\\"{\\n        'glyphicon-star': isFavorite,\\n        'glyphicon-star-empty': !isFavorite\\n    }\\\"\\n    (click)=\\\"onClick()\\\"\\n></span>\";","import { AbstractControl, ValidationErrors } from \"@angular/forms\";\r\n\r\n\r\nexport class PasswordValidators {\r\n    \r\n    static invalidOldPassword(control: AbstractControl) {\r\n        return new Promise((resolve) => {\r\n                if (control.value !== 'kushal')\r\n                    resolve({ invalidOldPassword: true });\r\n                else \r\n                    resolve (null);\r\n        });\r\n    }\r\n\r\n    static passwordShouldMatch(control: AbstractControl) {\r\n        let newPassword = control.get('newPassword');\r\n        let cnfPassword = control.get('cnfPassword');\r\n        if (newPassword !== null && cnfPassword !== null){\r\n            if (newPassword.value !== cnfPassword.value)\r\n                return { passwordShouldMatch: true };\r\n            \r\n            return (null);\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from './../../environments/environment';\r\nimport { User } from '../models/user';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll() {\r\n        return this.http.get<User[]>(`${environment.apiUrl}/users`);\r\n    }\r\n}","export default \"<p>not-found works!</p>\\n\";","\r\nexport class CoursesService{\r\n    getCourses() {\r\n        return [\"Programing\", \"Database\", \"Operating System\", \"Networking\"];\r\n    }\r\n}","import { HttpClient } from '@angular/common/http';\nimport { DataService } from './data.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GithubFollowersService extends DataService {\n\n  constructor(http: HttpClient) { \n    super('https://api.github.com/users/mosh-hamedani/followers', http)\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzaWdudXAtZm9ybS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({ templateUrl: 'login.component.html' })\nexport class LoginComponent implements OnInit {\n    loginForm: FormGroup | any;\n    loading = false;\n    submitted = false;\n    returnUrl: string | any;\n    error = '';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) { \n        // redirect to home if already logged in\n        if (this.authenticationService.currentUserValue) { \n            this.router.navigate(['/']);\n        }\n    }\n\n    ngOnInit() {\n        this.loginForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.loginForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.f.username.value, this.f.password.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.router.navigate([this.returnUrl]);\n                },\n                error => {\n                    this.error = error;\n                    this.loading = false;\n                });\n    }\n}","import { AbstractControl, ValidationErrors } from \"@angular/forms\";\r\n\r\n\r\nexport class UsernameValidators {\r\n    static cannotContainSpace(control: AbstractControl) : ValidationErrors | null {\r\n        if ((control.value as string).indexOf(' ') >= 0)\r\n            return { cannotContainSpace : true };\r\n        return null;\r\n    }\r\n\r\n    static shouldBeUnique(control: AbstractControl) : Promise<ValidationErrors | null> {\r\n        return new Promise((resolve,reject) => {\r\n            setTimeout (() => {\r\n                if (control.value === 'kushal')\r\n                    resolve({ shouldBeUnique: true });\r\n                else \r\n                    resolve (null);\r\n            }, 2000);\r\n        });\r\n    }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJuYXZiYXIuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<p>githubprofile works!</p>\\n\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"submit()\\\">Submit</button>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZG1pbi5jb21wb25lbnQuY3NzIn0= */\";","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[appInputFormat]'\n})\nexport class InputFormatDirective {\n  @Input('appInputFormat') format: any;\n  constructor(private el: ElementRef) { }\n\n  @HostListener('blur') onBlur(){\n    let value: string = this.el.nativeElement.value;\n    if(this.format== 'uppercase')\n      this.el.nativeElement.value = value.toUpperCase();\n    else\n      this.el.nativeElement.value = value.toLowerCase();\n\n  }  \n  \n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}